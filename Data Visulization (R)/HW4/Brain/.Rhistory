inFile = file("bruce_July13.bin", "rb")
for (i in 1:64)
{
d = matrix(readBin(inFile, integer(), size=2, n=256*256, endian = "big"), ncol=256, nrow=256)
}
close(inFile)
require(RColorBrewer)
x = seq(1, 256, 1)
y = seq(1, 256, 1)
image(x, y, d)
image(x, y, d, col=colorRampPalette(brewer.pal(9,"Oranges"))(100))
contour(x, y, d, levels = seq(50, 200, 50), add=T)
require(spatstat)
dImg = im(d, x, y)
dBlur = as.matrix(blur(im(d, x, y), sigma = 1))
image(x, y, dBlur, col=colorRampPalette(brewer.pal(9,"Oranges"))(100))
contour(x, y, dBlur, levels = seq(50, 200, 50), add=T)
install.packages("spatstat")
require(spatstat)
dImg = im(d, x, y)
dBlur = as.matrix(blur(im(d, x, y), sigma = 1))
image(x, y, dBlur, col=colorRampPalette(brewer.pal(9,"Oranges"))(100))
contour(x, y, dBlur, levels = seq(50, 200, 50), add=T)
inFile = file("bruce_July13.bin", "rb")
d = readBin(inFile, integer(), size=2, n=256*256*128, endian = "big")
head(d)
dataCube = array(data=d, dim=c(256, 256, 128))
close(inFile)
require(misc3d)
xVals = seq(1, 256, 1)
yVals = seq(1, 256, 1)
zVals = seq(1, 128, 1)
contour3d(dataCube, level=50, x=xVals, y=yVals, z=zVals)
eigenvals = get_eigenvalue(c)
plot(c, mass=T, contrib="absolute",
map="rowgreen", arrows=c(F, T))
for (i in 1:128)
{
dataCube[, , i] = as.array(blur(im(dataCube[, , i], x, y), sigma=2))
}
contour3d(dataCube, level=50, x=xVals, y=yVals, z=zVals)
